<%- include('../layout/header') %>
<%- include('../layout/navBar') %>

<% 
  const currentDate = new Date(); 
  const twoWeeksAgo = new Date(currentDate); 
  twoWeeksAgo.setDate(currentDate.getDate() - 14); // Fix: Properly setting two weeks ago
%>
 <div class="untree_co-section product-section before-footer-section shop-container">
<div class="container mt-5">
  
  <div class="row">
    <% if (!wishlistData || wishlistData.length === 0) { %>
      
      <div class="col-8 m-auto text-center mt-5 empty-w-list" >
        <img src="../../user/assets/web-img/empty-wishlist.png" alt="" class="w-80">
        <h6 class="mt-5">Start adding your favorite items to keep track of the things you love!</h6>
        <a href="/shop" class="btn">Shop Now</a>
    </div>
    <% } else { 
      
      wishlistData.forEach((datas) => {

        if (datas.product_data && datas.product_data[0]) {
          const data = datas.product_data[0];
          if (data.product_image && data.product_image[0]) {
            const img = data.product_image[0];
            const itemDate = new Date(data.timestamp); // Fix: Move itemDate calculation outside of the HTML
    %>
    
    <!-- Start Column 1 -->
    <div class="col-1 col-md-3 col-lg-3 mb-5">
  <a class="product-item" href="/view-product/<%= data._id %>">
    <div class="w-100 product-img-container">
      <% if (data.product_stock <= 0) { %>
        <span class="out-of-stock">Out Of Stock</span>
      <% } else if (data.product_stock <= 10) { %>
        <span class="label-low-stock">Only <%= data.product_stock %> Left</span>
      <% } else if (itemDate > twoWeeksAgo && itemDate <= currentDate) { %>
        <span class="label-new">New Item</span>
      <% } %>
      <img src="../../<%= img %>" class="img-fluid product-thumbnail">
    </div>
    <div class="flex">
      <p class="color-primary"><%= data.category_name %></p>
      <div>
        <button type="button" name="fav-icon" class="fav-icon" data-id="<%= data._id %>">
          <i class='bx bxs-heart card-wish-icon fav-color'></i>
        </button>
      </div>
    </div>
    <h3 class="product-title"><%= data.product_name %></h3>
    <% if (data.offerData && data.offerData.offer_amount) { %>
      <h5 class="product-price color-primary">₹<%= data.offerData.offer_amount %> <span class="cross-price"> ₹<%= data.product_price %></span></h5>
    <% } else { %>
      <h5 class="product-price color-primary">₹<%= data.product_price %></h5>
    <% } %>
    &nbsp;&nbsp;<%= data.product_quantity %>
    <h3 class="product-price">Rating: <i class='bx bxs-star rating'></i> 4.5</h3>
    <span class="icon-cross" data-id="<%= data._id %>">
      <img src="../../user/assets/web-img/cart-img.png" class="img-fluid" width="80%">
    </span>
  </a>
</div>
    <% 
          }
        }
      }); 
    } %>
  </div>
</div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll(".icon-cross").forEach(button => {
    console.log("Adding event listener to icon-cross");
    button.addEventListener('click', (e) => {
      e.preventDefault();
      const productId = button.getAttribute('data-id');
      console.log("icon-cross clicked", productId);

      fetch(`/wishlist-to-cart/${productId}`, {
        method: "GET"
      }).then((response) => {
        if (response.redirected) {
          window.location.href = response.url;
        } else {
          return response.json(); // Correctly parsing JSON response
        }
      }).then((data) => {
        Swal.fire({
          position: "top-end",
          text: data.message,
          showConfirmButton: false,
          timer: 2500
        });
        console.log(data, "data");
      }).catch((err) => {
        console.log(err);
      });
    });
  });

  document.querySelectorAll('.fav-icon').forEach(button => {
    button.addEventListener('click', function (event) {
      event.preventDefault(); // Prevent the default anchor behavior

      const productId = button.getAttribute('data-id');

      // Perform the fetch request to add the product to favorites
      fetch('/add-to-favorites', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId: productId }),
      })
      .then(response => {
        if(response.redirected) {
          window.location.href = response.url;
        } else if (!response.ok) {
          return response.text().then(text => {  // Read the response as text
            try {
              const err = JSON.parse(text);  // Try to parse the text as JSON
              throw new Error(err.message);  
            } catch (e) {
              console.error('Unexpected response format:', text);  // Log the unexpected response
              throw new Error('Unexpected response format');
            }
          });
        }
        return response.json();  // Parse the response as JSON
      })
      .then(data => {
        console.log("data", data)
        if (!data.success) {
          if (data.redirect) {
            window.location.href = data.redirect;
          } else {
            Swal.fire({
              position: "top-end",
              icon: "error",
              text: "Something went wrong. Try Again",
              showConfirmButton: false,
              timer: 1500
            });
          }
        } else if (data.action === 'added') {
          button.innerHTML = "<i class='bx bxs-heart card-wish-icon fav-color'></i>";
          location.reload();
        } else if (data.action === 'deleted') {
          button.innerHTML = "<i class='bx bx-heart card-wish-icon'></i>";
          location.reload();
        } else if(data.action === 'cartIn') {
          notificationMessage("Product already in cart");
        }
      })
      .catch(error => console.error('Error:', error));
    });
  });
});
</script>
